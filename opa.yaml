---
# Source: opa/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opa-notary-connector
  labels:
    app: opa-notary-connector
    chart: opa-1.13.6
    release: "opa-notary-connector"
    heritage: "Helm"
---
# Source: opa/templates/mgmt-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: opa
    chart: opa-1.13.6
    heritage: Helm
    release: opa-notary-connector
    component: mgmt
  name: opa-notary-connector-mgmt
rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - update
    - patch
---
# Source: opa/templates/mgmt-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: opa
    chart: opa-1.13.6
    heritage: Helm
    release: opa-notary-connector
    component: mgmt
  name: opa-notary-connector-mgmt
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opa-notary-connector-mgmt
subjects:
  - kind: ServiceAccount
    name: opa-notary-connector
    namespace: webhook
---
# Source: opa/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: opa-notary-connector
  labels:
    app: opa-notary-connector
    chart: "opa-1.13.6"
    release: "opa-notary-connector"
    heritage: "Helm"
spec:
  selector:
    app: opa-notary-connector
  ports:
  - name: https
    protocol: TCP
    port: 443
    targetPort: 8443
---
# Source: opa/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opa-notary-connector
  labels:
    app: opa-notary-connector
    chart: "opa-1.13.6"
    release: "opa-notary-connector"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opa-notary-connector
  template:
    metadata:
      annotations:
        checksum/certs: cd23efce09ba10e72c4aeb42e487279ac9d5de48c5ab8c79a08fc5e1259a38e0
      labels:
        app: opa-notary-connector
      name: opa-notary-connector
    spec:
      initContainers:
        - name: initpolicy
          image: openpolicyagent/kube-mgmt:0.11
          imagePullPolicy: Always
          resources:
            {}
          command:
          - /bin/sh
          - -c
          - |
            cat > /bootstrap/main.rego <<EOF
            package system
            
            import data.kubernetes.admission
            
            main = {
              "apiVersion": "admission.k8s.io/v1beta1",
              "kind": "AdmissionReview",
              "response": response,
            }
            
            default response = {"allowed": false, "status": {"reason": "Strict mode enabled"}}
            
            response = {
              "allowed": false,
              "status": {"reason": reason},
            } {
              reason := concat(", ", admission.deny)
              reason != ""
            }
            
            response = {
              "allowed": true,
              "patchType": "JSONPatch",
              "patch": patch_bytes,
            } {
              reason := concat(", ", admission.deny)
              reason == ""
              patch := {xw | xw := admission.patches[_][_]}
              patch_json := json.marshal(patch)
              patch_bytes := base64.encode(patch_json)
              patch_bytes != "W10="
            }
            
            response = {
              "allowed": false,
              "status": {"reason": patch_reason},
            } {
              reason := concat(", ", admission.deny)
              reason == ""
              patch = {xw | xw := admission.patches[_][_]}
              patch_json := json.marshal(patch)
              patch_bytes := base64.encode(patch_json)
              patch_bytes == "W10="
              patch_reason := "OPA Notary Connector didn't return a valid value. Look at its logs to debug it"
            }
            EOF
          volumeMounts:
            - name: bootstrap
              mountPath: /bootstrap

      containers:
        - name: opa
          image: openpolicyagent/opa:0.21.1
          imagePullPolicy: Always
          resources:
            {}
          args:
            - "run"
            - "--server"
            - "--tls-cert-file=/certs/tls.crt"
            - "--tls-private-key-file=/certs/tls.key"
            - "--addr=0.0.0.0:8443"
            - "--log-level=debug"
            - "--log-format=json-pretty"
            - "--addr=http://127.0.0.1:8181"
            - "/bootstrap"
          volumeMounts:
            - name: certs
              readOnly: true
              mountPath: /certs
            - name: bootstrap
              readOnly: true
              mountPath: /bootstrap
          readinessProbe:
            httpGet:
              path: /health
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 3
            periodSeconds: 5
        - name: mgmt
          image: openpolicyagent/kube-mgmt:0.11
          imagePullPolicy: Always
          resources:
            {}
          args:
            - --opa-url=http://127.0.0.1:8181/v1
            - --replicate-path=kubernetes
            - --enable-data=false
            - --enable-policies=true
            - --policies=webhook
            - --require-policy-label=true
          volumeMounts:
            - name: bootstrap
              readOnly: true
              mountPath: /bootstrap
        - args:
          - --config=/etc/opa-notary-connector/trust.yaml
          - --listen-address=:8080
          - --trust-root-dir=/etc/opa-notary-connector/.trust
          - --verbosity=debug
          command:
          - /opa-notary-connector
          env:
          - name: GIN_MODE
            value: debug
          image: localhost:30001/opa-notary-connector:latest
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
          name: opa-notary-connector
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
          securityContext:
            runAsUser: 1001
          volumeMounts:
          - mountPath: /etc/opa-notary-connector/trust.yaml
            name: opa-notary-connector-config
            subPath: trust.yaml
          - mountPath: /etc/ssl/certs/ca.crt
            name: notary-server-crt
            subPath: ca.crt
      securityContext:
        fsGroup: 
          1001
        runAsNonRoot: 
          true
        runAsUser: 
          1
      serviceAccountName: opa-notary-connector
      volumes:
        - configMap:
            name: opa-notary-connector-config
          name: opa-notary-connector-config
        - name: notary-server-crt
          secret:
            secretName: notary-server-crt
        - name: certs
          secret:
            secretName: opa-notary-connector-cert
        - name: bootstrap
          emptyDir: {}
      affinity:
        {}
      nodeSelector:
        {}
      tolerations:
        []
---
# Source: opa/templates/webhookconfiguration.yaml
# Generate a CA Certificate used to sign certificates for the webhook
apiVersion: cert-manager.io/v1alpha3
kind: Certificate
metadata:
  name: opa-notary-connector-ca
  labels:
    app: opa-notary-connector
    chart: "opa-1.13.6"
    release: "opa-notary-connector"
    heritage: "Helm"
spec:
  secretName: opa-notary-connector-ca
  duration: 43800h # 5y
  issuerRef:
    name: opa-notary-connector-selfsign
  commonName: "ca.webhook.opa"
  isCA: true
---
# Source: opa/templates/webhookconfiguration.yaml
# Finally, generate a serving certificate for the webhook to use
apiVersion: cert-manager.io/v1alpha3
kind: Certificate
metadata:
  name: opa-notary-connector-webhook-tls
  labels:
    app: opa-notary-connector
    chart: "opa-1.13.6"
    release: "opa-notary-connector"
    heritage: "Helm"
spec:
  secretName: opa-notary-connector-cert
  duration: 8760h # 1y
  issuerRef:
    name: opa-notary-connector-ca
  dnsNames:
  - opa-notary-connector
  - opa-notary-connector.webhook
  - opa-notary-connector.webhook.svc
---
# Source: opa/templates/webhookconfiguration.yaml
# Create a selfsigned Issuer, in order to create a root CA certificate for
# signing webhook serving certificates
apiVersion: cert-manager.io/v1alpha3
kind: Issuer
metadata:
  name: opa-notary-connector-selfsign
  labels:
    app: opa-notary-connector
    chart: "opa-1.13.6"
    release: "opa-notary-connector"
    heritage: "Helm"
spec:
  selfSigned: {}
---
# Source: opa/templates/webhookconfiguration.yaml
# Create an Issuer that uses the above generated CA certificate to issue certs
apiVersion: cert-manager.io/v1alpha3
kind: Issuer
metadata:
  name: opa-notary-connector-ca
  labels:
    app: opa-notary-connector
    chart: "opa-1.13.6"
    release: "opa-notary-connector"
    heritage: "Helm"
spec:
  ca:
    secretName: opa-notary-connector-ca
---
# Source: opa/templates/webhookconfiguration.yaml
kind: MutatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1beta1
metadata:
  name: opa-notary-connector
  annotations:
    certmanager.k8s.io/inject-ca-from: "webhook/opa-notary-connector-ca"
    cert-manager.io/inject-ca-from: "webhook/opa-notary-connector-ca"
  labels:
    app: opa-notary-connector
    chart: "opa-1.13.6"
    release: "opa-notary-connector"
    heritage: "Helm"
webhooks:
  - name: webhook.openpolicyagent.org
    namespaceSelector:
      matchExpressions:
      - key: sighup.io/webhook
        operator: NotIn
        values:
        - ignore

    failurePolicy: Fail
    rules:
      - apiGroups:
        - '*'
        apiVersions:
        - '*'
        operations:
        - CREATE
        - UPDATE
        resources:
        - pods
        - deployments
        - replicationcontrollers
        - replicasets
        - daemonsets
        - statefulsets
        - jobs
        - cronjobs
    clientConfig:

      service:
        name: opa-notary-connector
        namespace: webhook
    sideEffects: Unknown
